# Generated by Django 5.0.7 on 2025-09-21 10:39

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Analytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("user_activity", "User Activity"),
                            ("feature_usage", "Feature Usage"),
                            ("performance", "Performance"),
                            ("engagement", "Engagement"),
                            ("health_metrics", "Health Metrics"),
                            ("system_metrics", "System Metrics"),
                        ],
                        max_length=20,
                    ),
                ),
                ("metric_name", models.CharField(max_length=100)),
                (
                    "metric_key",
                    models.CharField(
                        help_text="Unique identifier for this metric", max_length=150
                    ),
                ),
                ("value", models.DecimalField(decimal_places=4, max_digits=15)),
                ("unit", models.CharField(blank=True, max_length=50)),
                ("additional_data", models.JSONField(blank=True, default=dict)),
                ("session_id", models.CharField(blank=True, max_length=100)),
                (
                    "period",
                    models.CharField(
                        choices=[
                            ("instant", "Instant"),
                            ("hourly", "Hourly"),
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                        ],
                        default="instant",
                        max_length=20,
                    ),
                ),
                ("period_start", models.DateTimeField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["metric_type", "metric_name"],
                        name="core_analyt_metric__3b9c3b_idx",
                    ),
                    models.Index(
                        fields=["metric_key", "timestamp"],
                        name="core_analyt_metric__ccfcb5_idx",
                    ),
                    models.Index(
                        fields=["user", "timestamp"],
                        name="core_analyt_user_id_4332d1_idx",
                    ),
                    models.Index(
                        fields=["period", "period_start"],
                        name="core_analyt_period_e1cea1_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("create", "Create"),
                            ("update", "Update"),
                            ("delete", "Delete"),
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("access", "Access"),
                            ("export", "Export"),
                            ("import", "Import"),
                            ("admin_action", "Admin Action"),
                            ("crisis_action", "Crisis Action"),
                            ("moderation", "Moderation"),
                        ],
                        max_length=20,
                    ),
                ),
                ("action_description", models.TextField()),
                ("model_name", models.CharField(blank=True, max_length=100)),
                ("object_id", models.CharField(blank=True, max_length=100)),
                ("object_repr", models.CharField(blank=True, max_length=200)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("session_key", models.CharField(blank=True, max_length=100)),
                ("additional_data", models.JSONField(blank=True, default=dict)),
                ("was_successful", models.BooleanField(default=True)),
                ("error_message", models.TextField(blank=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "timestamp"],
                        name="core_auditl_user_id_7b678c_idx",
                    ),
                    models.Index(
                        fields=["action_type", "timestamp"],
                        name="core_auditl_action__64f4df_idx",
                    ),
                    models.Index(
                        fields=["model_name", "object_id"],
                        name="core_auditl_model_n_3fb686_idx",
                    ),
                    models.Index(
                        fields=["ip_address"], name="core_auditl_ip_addr_d66782_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ContactMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sender_name", models.CharField(blank=True, max_length=200)),
                ("sender_email", models.EmailField(blank=True, max_length=254)),
                ("sender_phone", models.CharField(blank=True, max_length=20)),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("general", "General Inquiry"),
                            ("tech_support", "Technical Support"),
                            ("feature_request", "Feature Request"),
                            ("bug_report", "Bug Report"),
                            ("feedback", "Feedback"),
                            ("complaint", "Complaint"),
                            ("emergency", "Emergency"),
                        ],
                        max_length=20,
                    ),
                ),
                ("subject", models.CharField(max_length=300)),
                ("message", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("in_progress", "In Progress"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                        ],
                        default="new",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("response", models.TextField(blank=True)),
                ("response_sent_at", models.DateTimeField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("additional_data", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"role__in": ["admin", "counselor"]},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["status", "priority"],
                        name="core_contac_status_19d56f_idx",
                    ),
                    models.Index(
                        fields=["message_type"], name="core_contac_message_8ab043_idx"
                    ),
                    models.Index(
                        fields=["assigned_to"], name="core_contac_assigne_22c1ae_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="FAQ",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.TextField()),
                ("answer", models.TextField()),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("general", "General"),
                            ("account", "Account & Profile"),
                            ("appointments", "Appointments"),
                            ("assessments", "Assessments"),
                            ("wellness", "Wellness Tracking"),
                            ("community", "Community"),
                            ("crisis", "Crisis Support"),
                            ("privacy", "Privacy & Security"),
                            ("technical", "Technical Support"),
                        ],
                        max_length=20,
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_published", models.BooleanField(default=True)),
                ("search_keywords", models.JSONField(blank=True, default=list)),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("helpful_count", models.PositiveIntegerField(default=0)),
                ("not_helpful_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        limit_choices_to={"role__in": ["admin", "counselor"]},
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["category", "order", "question"],
                "indexes": [
                    models.Index(
                        fields=["category", "is_published"],
                        name="core_faq_categor_378ca3_idx",
                    ),
                    models.Index(
                        fields=["is_featured", "is_published"],
                        name="core_faq_is_feat_e708ec_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("message", models.TextField()),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("system", "System Notification"),
                            ("appointment", "Appointment Related"),
                            ("assessment", "Assessment Related"),
                            ("wellness", "Wellness Related"),
                            ("community", "Community Related"),
                            ("crisis", "Crisis Alert"),
                            ("reminder", "Reminder"),
                            ("achievement", "Achievement"),
                            ("security", "Security Alert"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                (
                    "action_url",
                    models.URLField(
                        blank=True,
                        help_text="URL to redirect when notification is clicked",
                    ),
                ),
                ("action_data", models.JSONField(blank=True, default=dict)),
                ("is_read", models.BooleanField(default=False)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("send_email", models.BooleanField(default=False)),
                ("send_push", models.BooleanField(default=True)),
                ("email_sent", models.BooleanField(default=False)),
                ("push_sent", models.BooleanField(default=False)),
                ("related_object_type", models.CharField(blank=True, max_length=50)),
                ("related_object_id", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "scheduled_for",
                    models.DateTimeField(
                        blank=True,
                        help_text="Schedule notification for future delivery",
                        null=True,
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["recipient", "is_read"],
                        name="core_notifi_recipie_aeffaf_idx",
                    ),
                    models.Index(
                        fields=["notification_type"],
                        name="core_notifi_notific_cbfe88_idx",
                    ),
                    models.Index(
                        fields=["priority"], name="core_notifi_priorit_8208cb_idx"
                    ),
                    models.Index(
                        fields=["scheduled_for"], name="core_notifi_schedul_cc624e_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SystemAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("message", models.TextField()),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("maintenance", "Maintenance"),
                            ("outage", "System Outage"),
                            ("update", "System Update"),
                            ("security", "Security Alert"),
                            ("announcement", "Announcement"),
                            ("warning", "Warning"),
                            ("info", "Information"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("scheduled", "Scheduled"),
                            ("resolved", "Resolved"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "target_roles",
                    models.JSONField(
                        blank=True, default=list, help_text="Empty list means all users"
                    ),
                ),
                ("is_dismissible", models.BooleanField(default=True)),
                ("show_on_login", models.BooleanField(default=False)),
                ("show_on_dashboard", models.BooleanField(default=True)),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        limit_choices_to={"role": "admin"},
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "target_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="targeted_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-start_time"],
                "indexes": [
                    models.Index(
                        fields=["status", "start_time"],
                        name="core_system_status_ac013e_idx",
                    ),
                    models.Index(
                        fields=["alert_type"], name="core_system_alert_t_7d2092_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SystemConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=100, unique=True)),
                ("value", models.TextField()),
                ("description", models.TextField(blank=True)),
                (
                    "data_type",
                    models.CharField(
                        choices=[
                            ("string", "String"),
                            ("integer", "Integer"),
                            ("float", "Float"),
                            ("boolean", "Boolean"),
                            ("json", "JSON Object"),
                            ("list", "List"),
                        ],
                        default="string",
                        max_length=20,
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="Can be accessed by non-admin users"
                    ),
                ),
                ("is_editable", models.BooleanField(default=True)),
                (
                    "category",
                    models.CharField(
                        blank=True, help_text="Configuration category", max_length=50
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "updated_by",
                    models.ForeignKey(
                        limit_choices_to={"role": "admin"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["category", "key"],
                "indexes": [
                    models.Index(
                        fields=["category"], name="core_system_categor_c291e4_idx"
                    ),
                    models.Index(
                        fields=["is_public"], name="core_system_is_publ_19ebd3_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="UserPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email_notifications", models.BooleanField(default=True)),
                ("push_notifications", models.BooleanField(default=True)),
                ("sms_notifications", models.BooleanField(default=False)),
                ("appointment_reminders", models.BooleanField(default=True)),
                ("wellness_reminders", models.BooleanField(default=True)),
                ("community_notifications", models.BooleanField(default=True)),
                ("assessment_reminders", models.BooleanField(default=True)),
                ("crisis_alerts", models.BooleanField(default=True)),
                (
                    "profile_visibility",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("community", "Community Only"),
                            ("private", "Private"),
                        ],
                        default="community",
                        max_length=20,
                    ),
                ),
                ("show_online_status", models.BooleanField(default=True)),
                ("allow_direct_messages", models.BooleanField(default=True)),
                (
                    "theme",
                    models.CharField(
                        choices=[
                            ("light", "Light"),
                            ("dark", "Dark"),
                            ("auto", "Auto"),
                        ],
                        default="auto",
                        max_length=20,
                    ),
                ),
                ("language", models.CharField(default="en", max_length=10)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                (
                    "dashboard_widgets",
                    models.JSONField(
                        blank=True, default=list, help_text="Enabled dashboard widgets"
                    ),
                ),
                (
                    "dashboard_layout",
                    models.JSONField(
                        blank=True, default=dict, help_text="Dashboard widget layout"
                    ),
                ),
                ("data_sharing_analytics", models.BooleanField(default=True)),
                ("data_sharing_research", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(fields=["user"], name="core_userpr_user_id_609bcc_idx")
                ],
            },
        ),
    ]
