# Generated by Django 5.0.7 on 2025-09-21 10:39

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AppointmentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField()),
                ("duration_minutes", models.PositiveIntegerField(default=60)),
                (
                    "price",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=8),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "color",
                    models.CharField(
                        default="#007bff", help_text="Hex color code", max_length=7
                    ),
                ),
                ("icon", models.CharField(blank=True, max_length=50)),
                (
                    "advance_booking_days",
                    models.PositiveIntegerField(
                        default=7, help_text="How many days in advance can be booked"
                    ),
                ),
                (
                    "cancellation_hours",
                    models.PositiveIntegerField(
                        default=24,
                        help_text="Hours before appointment for free cancellation",
                    ),
                ),
                ("max_sessions_per_week", models.PositiveIntegerField(default=3)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("scheduled_date", models.DateField()),
                ("scheduled_time", models.TimeField()),
                ("duration_minutes", models.PositiveIntegerField()),
                ("timezone_name", models.CharField(default="UTC", max_length=50)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Confirmation"),
                            ("confirmed", "Confirmed"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled_student", "Cancelled by Student"),
                            ("cancelled_counselor", "Cancelled by Counselor"),
                            ("no_show", "No Show"),
                            ("rescheduled", "Rescheduled"),
                        ],
                        default="pending",
                        max_length=30,
                    ),
                ),
                (
                    "meeting_type",
                    models.CharField(
                        choices=[
                            ("in_person", "In Person"),
                            ("video_call", "Video Call"),
                            ("phone_call", "Phone Call"),
                            ("chat_only", "Chat Only"),
                        ],
                        default="video_call",
                        max_length=20,
                    ),
                ),
                ("reason", models.TextField(help_text="Reason for appointment")),
                (
                    "student_notes",
                    models.TextField(
                        blank=True, help_text="Additional notes from student"
                    ),
                ),
                (
                    "counselor_notes",
                    models.TextField(blank=True, help_text="Counselor's notes"),
                ),
                (
                    "meeting_url",
                    models.URLField(blank=True, help_text="Video call link"),
                ),
                (
                    "meeting_room",
                    models.CharField(
                        blank=True,
                        help_text="Physical room or virtual room ID",
                        max_length=100,
                    ),
                ),
                ("meeting_password", models.CharField(blank=True, max_length=50)),
                ("follow_up_required", models.BooleanField(default=False)),
                ("follow_up_date", models.DateField(blank=True, null=True)),
                ("emergency_session", models.BooleanField(default=False)),
                (
                    "student_rating",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("student_feedback", models.TextField(blank=True)),
                (
                    "counselor_rating",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("counselor_feedback", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("confirmed_at", models.DateTimeField(blank=True, null=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("ended_at", models.DateTimeField(blank=True, null=True)),
                (
                    "cost",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=8),
                ),
                ("payment_status", models.CharField(default="free", max_length=20)),
                ("payment_reference", models.CharField(blank=True, max_length=100)),
                (
                    "counselor",
                    models.ForeignKey(
                        limit_choices_to={"role": "counselor"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="counselor_appointments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        limit_choices_to={"role": "student"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_appointments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "appointment_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="appointments.appointmenttype",
                    ),
                ),
            ],
            options={
                "ordering": ["-scheduled_date", "-scheduled_time"],
            },
        ),
        migrations.CreateModel(
            name="AppointmentTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("default_duration", models.PositiveIntegerField()),
                ("default_notes", models.TextField(blank=True)),
                ("is_recurring", models.BooleanField(default=False)),
                ("recurrence_pattern", models.JSONField(blank=True, default=dict)),
                ("max_occurrences", models.PositiveIntegerField(blank=True, null=True)),
                ("is_public", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "appointment_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="appointments.appointmenttype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CounselorAvailability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day_of_week",
                    models.IntegerField(
                        choices=[
                            (1, "Monday"),
                            (2, "Tuesday"),
                            (3, "Wednesday"),
                            (4, "Thursday"),
                            (5, "Friday"),
                            (6, "Saturday"),
                            (7, "Sunday"),
                        ]
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("is_active", models.BooleanField(default=True)),
                (
                    "specific_date",
                    models.DateField(
                        blank=True, help_text="Override for specific date", null=True
                    ),
                ),
                (
                    "is_available",
                    models.BooleanField(
                        default=True,
                        help_text="Available or blocked for this time slot",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "appointment_types",
                    models.ManyToManyField(
                        blank=True, to="appointments.appointmenttype"
                    ),
                ),
                (
                    "counselor",
                    models.ForeignKey(
                        limit_choices_to={"role": "counselor"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availability_schedule",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["counselor", "day_of_week", "start_time"],
            },
        ),
        migrations.CreateModel(
            name="CounselorUnavailability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "unavailability_type",
                    models.CharField(
                        choices=[
                            ("vacation", "Vacation"),
                            ("sick_leave", "Sick Leave"),
                            ("training", "Training/Conference"),
                            ("personal", "Personal Time"),
                            ("emergency", "Emergency"),
                        ],
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "start_time",
                    models.TimeField(
                        blank=True, help_text="Leave blank for full day", null=True
                    ),
                ),
                (
                    "end_time",
                    models.TimeField(
                        blank=True, help_text="Leave blank for full day", null=True
                    ),
                ),
                ("reason", models.TextField(blank=True)),
                ("is_recurring", models.BooleanField(default=False)),
                ("recurrence_pattern", models.JSONField(blank=True, default=dict)),
                ("is_approved", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"role": "admin"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_unavailability",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "counselor",
                    models.ForeignKey(
                        limit_choices_to={"role": "counselor"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="unavailability_periods",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["start_date", "start_time"],
            },
        ),
        migrations.CreateModel(
            name="AppointmentNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "note_type",
                    models.CharField(
                        choices=[
                            ("session_notes", "Session Notes"),
                            ("assessment", "Assessment Notes"),
                            ("progress", "Progress Notes"),
                            ("crisis", "Crisis Notes"),
                            ("administrative", "Administrative Notes"),
                        ],
                        default="session_notes",
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200)),
                ("content", models.TextField()),
                ("is_confidential", models.BooleanField(default=True)),
                ("visible_to_student", models.BooleanField(default=False)),
                ("tags", models.JSONField(blank=True, default=list)),
                ("referenced_assessments", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "appointment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notes",
                        to="appointments.appointment",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointment_notes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["appointment", "note_type"],
                        name="appointment_appoint_f4be51_idx",
                    ),
                    models.Index(
                        fields=["author"], name="appointment_author__18a622_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AppointmentReminder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reminder_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("push", "Push Notification"),
                            ("in_app", "In-App Notification"),
                        ],
                        max_length=20,
                    ),
                ),
                ("scheduled_for", models.DateTimeField()),
                ("message", models.TextField(blank=True)),
                ("is_sent", models.BooleanField(default=False)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("delivery_status", models.CharField(default="pending", max_length=20)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "appointment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reminders",
                        to="appointments.appointment",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["scheduled_for"],
                "indexes": [
                    models.Index(
                        fields=["appointment", "recipient"],
                        name="appointment_appoint_60ddd8_idx",
                    ),
                    models.Index(
                        fields=["is_sent", "scheduled_for"],
                        name="appointment_is_sent_f52f8e_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(
                fields=["student", "status"], name="appointment_student_632237_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(
                fields=["counselor", "status"], name="appointment_counsel_6cb63f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(
                fields=["scheduled_date", "scheduled_time"],
                name="appointment_schedul_59e8bc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(fields=["status"], name="appointment_status_8fe9d7_idx"),
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(
                fields=["emergency_session"], name="appointment_emergen_98080a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="counseloravailability",
            index=models.Index(
                fields=["counselor", "day_of_week"],
                name="appointment_counsel_a87815_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="counseloravailability",
            index=models.Index(
                fields=["specific_date"], name="appointment_specifi_06e710_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="counseloravailability",
            index=models.Index(
                fields=["is_active"], name="appointment_is_acti_a24885_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="counseloravailability",
            unique_together={
                ("counselor", "day_of_week", "start_time", "specific_date")
            },
        ),
        migrations.AddIndex(
            model_name="counselorunavailability",
            index=models.Index(
                fields=["counselor", "start_date", "end_date"],
                name="appointment_counsel_a2afd7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="counselorunavailability",
            index=models.Index(
                fields=["is_approved"], name="appointment_is_appr_23f325_idx"
            ),
        ),
    ]
